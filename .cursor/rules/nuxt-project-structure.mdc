---
description:
globs:
alwaysApply: false
---
# Nuxt项目结构指南

## 项目概述
这是一个基于Nuxt 3的临时邮箱服务项目，使用Vue 3的Composition API开发，并集成了多语言支持和主题切换功能。

## 主要目录结构
- [app.vue](mdc:app.vue) - 应用程序的主要入口文件，包含应用的主布局和全局SEO配置
- [nuxt.config.ts](mdc:nuxt.config.ts) - Nuxt项目配置文件，定义了模块、应用设置和构建选项
- [pages/index.vue](mdc:pages/index.vue) - 应用的主页面
- [components/](mdc:components) - 包含可复用的Vue组件
  - [components/LanguageSwitcher.vue](mdc:components/LanguageSwitcher.vue) - 语言切换组件
  - [components/ThemeSwitcher.vue](mdc:components/ThemeSwitcher.vue) - 主题切换组件
  - [components/SchemaOrg.vue](mdc:components/SchemaOrg.vue) - 结构化数据组件，用于SEO优化
- [i18n/locales/](mdc:i18n/locales) - 多语言翻译文件
  - [i18n/locales/zh.json](mdc:i18n/locales/zh.json) - 中文翻译
  - [i18n/locales/en.json](mdc:i18n/locales/en.json) - 英文翻译

## 项目特点
- 使用Vue 3的Composition API和setup语法糖
- 集成@nuxt/ui模块实现UI组件
- 支持中英文双语切换
- 支持暗色/亮色主题切换
- 使用TypeScript进行类型检查
- SEO优化，包括元标签和结构化数据

## Nuxt特定目录
- [.nuxt/](mdc:.nuxt) - 自动生成的Nuxt开发目录
- [.output/](mdc:.output) - 构建输出目录
- [dist/](mdc:dist) - 旧版构建输出目录

## 开发指南
- 页面应放在[pages/](mdc:pages)目录下
- 可复用组件应放在[components/](mdc:components)目录下
- 组合式函数应放在[composables/](mdc:composables)目录下
- 静态资源应放在[public/](mdc:public)目录下
- CSS和其他资源应放在[assets/](mdc:assets)目录下
- 服务器端API应放在[server/](mdc:server)目录下

## 构建与部署
使用以下命令进行开发和构建：
- `bun run dev` - 启动开发服务器
- `bun run build` - 构建生产版本
- `bun run preview` - 预览生产版本
